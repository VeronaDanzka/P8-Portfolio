---                               
import '../styles/global.css' 
import Toggledark from '../components/astro/Toggledark.astro'
import Nav from '../components/astro/Nav.astro'
import LoginButton from '../components/react/LoginButton.jsx'
const year = new Date().getFullYear() 
---   

<html class="overflow-x-hidden" lang="fr">
  <head>
    <link rel="preload" href="/fonts/montserrat-v29-latin-regular.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="preload" href="/fonts/montserrat-v29-latin-italic.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="preload" href="/fonts/montserrat-v29-latin-700.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="icon" type="image/webp" sizes="32x32" href="/img/logo-dnd.webp">
    <link rel="apple-touch-icon" type="image/webp" sizes="180x180" href="/img/logo-dnd.webp">
    <script>
      (function () {
        const storedTheme = localStorage.getItem('theme portfolio davide');
        const isDark = storedTheme === 'dark';
        
        if (isDark) {
          document.documentElement.classList.add('dark');
          document.documentElement.classList.add('thumb-dark');
        }
      })();
    </script>
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js" defer></script>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <slot name="head" />
	  <meta name="author" content="Davide De Notarpietro">
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet" />
  </head>
  <body class="min-h-screen overflow-x-hidden flex flex-col bg-gradient-custom text-gray-800 font-montserrat dark:text-gray-300">
    <script>// Create particle effect
        const particlesContainer = document.getElementById('particles-container');
        const particleCount = 80;
        
        // Create particles
        for (let i = 0; i < particleCount; i++) {
            createParticle();
        }
        
        function createParticle() {
            const particle = document.createElement('div');
            particle.className = 'particle';
            
            // Random size (small)
            const size = Math.random() * 3 + 1;
            particle.style.width = `${size}px`;
            particle.style.height = `${size}px`;
            
            // Initial position
            resetParticle(particle);
            
            particlesContainer.appendChild(particle);
            
            // Animate
            animateParticle(particle);
        }
        
        function resetParticle(particle) {
            // Random position
            const posX = Math.random() * 100;
            const posY = Math.random() * 100;
            
            particle.style.left = `${posX}%`;
            particle.style.top = `${posY}%`;
            particle.style.opacity = '0';
            
            return {
                x: posX,
                y: posY
            };
        }
        
        function animateParticle(particle) {
            // Initial position
            const pos = resetParticle(particle);
            
            // Random animation properties
            const duration = Math.random() * 10 + 10;
            const delay = Math.random() * 5;
            
            // Animate with GSAP-like timing
            setTimeout(() => {
                particle.style.transition = `all ${duration}s linear`;
                particle.style.opacity = Math.random() * 0.3 + 0.1;
                
                // Move in a slight direction
                const moveX = pos.x + (Math.random() * 20 - 10);
                const moveY = pos.y - Math.random() * 30; // Move upwards
                
                particle.style.left = `${moveX}%`;
                particle.style.top = `${moveY}%`;
                
                // Reset after animation completes
                setTimeout(() => {
                    animateParticle(particle);
                }, duration * 1000);
            }, delay * 1000);
        }
        
        // Mouse interaction
        document.addEventListener('mousemove', (e) => {
            // Create particles at mouse position
            const mouseX = (e.clientX / window.innerWidth) * 100;
            const mouseY = (e.clientY / window.innerHeight) * 100;
            
            // Create temporary particle
            const particle = document.createElement('div');
            particle.className = 'particle';
            
            // Small size
            const size = Math.random() * 4 + 2;
            particle.style.width = `${size}px`;
            particle.style.height = `${size}px`;
            
            // Position at mouse
            particle.style.left = `${mouseX}%`;
            particle.style.top = `${mouseY}%`;
            particle.style.opacity = '0.6';
            
            particlesContainer.appendChild(particle);
            
            // Animate outward
            setTimeout(() => {
                particle.style.transition = 'all 2s ease-out';
                particle.style.left = `${mouseX + (Math.random() * 10 - 5)}%`;
                particle.style.top = `${mouseY + (Math.random() * 10 - 5)}%`;
                particle.style.opacity = '0';
                
                // Remove after animation
                setTimeout(() => {
                    particle.remove();
                }, 2000);
            }, 10);
            
            // Subtle movement of gradient spheres
            const spheres = document.querySelectorAll('.gradient-sphere');
            const moveX = (e.clientX / window.innerWidth - 0.5) * 5;
            const moveY = (e.clientY / window.innerHeight - 0.5) * 5;
            
            spheres.forEach(sphere => {
                const currentTransform = getComputedStyle(sphere).transform;
                sphere.style.transform = `translate(${moveX}px, ${moveY}px)`;
            });
        });</script>
    <div class="gradient-background">
        <div class="gradient-sphere sphere-1"></div>
        <div class="gradient-sphere sphere-2"></div>
        <div class="gradient-sphere sphere-3"></div>
        <div class="glow"></div>
        <div class="grid-overlay"></div>
        <div class="noise-overlay"></div>
        <div class="particles-container" id="particles-container"></div>
    </div>
    <Nav class="z-9999 fixed h-12 bottom-0 left-0 right-0 space-x-4 navMobile-gradient-custom bg-gradient-custom dark:text-gray-700 flex justify-around items-center md:hidden" textColor="text-gray-300 hover:text-gray-100 dark:text-gray-600 dark:hover:text-gray-800" toggleClass="hidden" aria-label="Navigation principale mobile" />
    <div class="flex-grow" data-aos="fade-in">
    <!-- Header avec navigation -->
    <header class="backdrop-blur-xl shadow-md dark:shadow-black md:h-32">
      
      <div class="container p-6 mx-auto flex flex-col justify-between items-center md:flex-row md:h-32">
          <a class="flex flex-row lg:items-center" href="/">
            <img src="/img/logo-dnd.webp" alt="Logo de Davide De Notarpietro" class="w-15 h-15" />
            <h1 class="text-sm font-bold block pt-1 items-center lg:text-base" data-astro-lcp>Davide De Notarpietro
              <span class="text-xs font-normal italic block mb-2 lg:text-sm">développeur web full-stack & eCommerçant</span>
            </h1>
          </a>
        <Nav class="hidden md:flex md:gap-4 md:items-center md:justify-center flex-2" textColor="dark:hover:text-gray-100" toggleClass="md:flex" aria-label="Navigation principale" />
        <div class="flex flex-1 flex-col-reverse items-center gap-2 md:w-35">
          <LoginButton client:only="react" />
          <Toggledark aria-label="Activer ou désactiver le mode sombre" role="switch"/>
        </div>
      </div>
      <slot name="header" />
    </header>
    <!-- Contenu principal -->
      <slot name="main"/>
    </div>
    <!-- Footer -->
    <footer class="pb-13 flex flex-col gap-4 bg-gray-200 dark:bg-gray-700 text-center p-4 text-sm">
      <p>Site réalisé à la main et ne collectant aucune donnée personnelle</p>
      <p>Développé avec <a href="https://astro.build/" aria-label="Visiter le site officiel Astro" target="_blank" rel="noopener noreferrer" class="text-black font-bold dark:text-white hover:underline">Astro</a> et déployé sur <a href="https://vercel.com/" aria-label="Visiter le site officiel Vercel" target="_blank" rel="noopener noreferrer" class="text-black font-bold dark:text-white hover:underline">Vercel</a></p>
      <p slot="footer">© {year} Davide De Notarpietro - Tous droits réservés</p>
      <slot name="footer" />
    </footer>   
	<!-- Initialise AOS après chargement complet -->
    <script>
      window.addEventListener('DOMContentLoaded', () => {
        AOS.init();
      });
    </script>
  </body>
</html>
